module Well_known_types exposing (..)

-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: well_known_types.proto

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE


uselessDeclarationToPreventErrorDueToEmptyOutputFile = 42

requiredWithoutDefault : String -> JD.Decoder a -> JD.Decoder (a -> b) -> JD.Decoder b
requiredWithoutDefault name decoder d =
    field (JD.field name decoder) d

requiredFieldEncoderWithoutDefault : String -> (a -> JE.Value) -> a -> Maybe ( String, JE.Value )
requiredFieldEncoderWithoutDefault name encoder v =
    Just ( name, encoder v )


type alias Message =
    { doubleValueField : Maybe Float -- 1
    }


messageDecoder : JD.Decoder Message
messageDecoder =
    JD.lazy <| \_ -> decode Message
        |> optional "doubleValueField" floatValueDecoder


messageEncoder : Message -> JE.Value
messageEncoder v =
    JE.object <| List.filterMap identity <|
        [ (optionalEncoder "doubleValueField" floatValueEncoder v.doubleValueField)
        ]
