package forwardids

import (
	"bytes"
	"github.com/thematthopkins/elm-protobuf/pkg/parsepb"
	"google.golang.org/protobuf/types/descriptorpb"
	"google.golang.org/protobuf/types/pluginpb"
	"text/template"
)

func Generate(inFile *descriptorpb.FileDescriptorProto, messages []parsepb.PbMessage) (*pluginpb.CodeGeneratorResponse_File, error) {
	t := template.New("t")

	t, err := t.Parse(`module Ids exposing (
    {{ range $index, $element := .Messages}}
        {{if $index}},{{end}}
        {{$element.TypeAlias.Name}}
    {{end}}
)

-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: {{ .SourceFile }}

{{ range $index, $element := .Ids}}
type {{$element.TypeAlias.Name}}
    = {{$element.TypeAlias.Name}} String
{{end}}

`)
	if err != nil {
		return nil, err
	}

	messages_with_ids := parsepb.MessagesWithIds(messages)

	buff := &bytes.Buffer{}
	if err = t.Execute(buff, struct {
		SourceFile string
		Messages   []parsepb.PbMessage
	}{
		SourceFile: inFile.GetName(),
		Messages:   messages_with_ids,
	}); err != nil {
		return nil, err
	}

	fileName := "ForwardNew/Interface/Ids.elm"
	result := buff.String()
	return &pluginpb.CodeGeneratorResponse_File{
		Name:    &fileName,
		Content: &result,
	}, nil
}
